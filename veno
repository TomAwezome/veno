#!/usr/bin/env python3
import traceback, sys
from cProfile import Profile

# set to True to enable profiler and report information on program exit
is_profiling = False

if is_profiling:
	prof = Profile()
	prof.enable()

def profPrintStats():
	if is_profiling:
		for entry in sorted(prof.getstats(), key=lambda e:e.totaltime, reverse=True)[:20]:
			c = entry.code
			if not isinstance(c, str):
				c = f"{c.co_name:<32}Line {c.co_firstlineno:<5} of {c.co_filename}"
			print(f" {round(entry.totaltime, 4):<9}", c)

class EngineException(Exception):
	pass

from modules.engine import Engine
engine = Engine()

engine.setException(EngineException)

while True:
	try:
		engine.turn()
	except EngineException:
		engine.terminate()
		break
	except:
		engine.terminate()
		traceback.print_exc()  # Print the exception
		break

profPrintStats()
sys.exit(0)
